---
name: CI
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  check-license-comments:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Check license comments
      run: |
        ./.tools/check-license-comments.sh

  licensecheck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Set up Python
      run: uv python install

    - name: Show dependency tree
      run: uv tree
    - name: Verify licenses are allowed
      run: .tools/check-third-party-licenses.sh
    - name: Generate up-to-date `THIRD_PARTY_LICENSES.md`
      run: .tools/show-third-party-licenses.sh > ./THIRD_PARTY_LICENSES.md
    - name: Verify `THIRD_PARTY_LICENSES.md` is up-to-date
      run: |
        git diff --exit-code ./THIRD_PARTY_LICENSES.md
        if [ $? -ne 0 ]; then
          echo "THIRD_PARTY_LICENSES.md is out of date. Please run '.tools/show-third-party-licenses.sh > ./THIRD_PARTY_LICENSES.md' locally, compare what has changed and commit the changes."
          exit 1
        fi

  linting:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Set up Python
      run: uv python install

    - name: ruff check
      run: uv run ruff check --output-format=github .
    - name: ruff format
      run: uv run ruff format --diff
    - name: ty check
      run: uv run ty check
    - name: mypy
      run: uv run mypy examples/ src/

    - name: yamllint
      uses: frenck/action-yamllint@v1.5.0

  tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Set up Python
      run: uv python install

    - name: Run pytest
      run: uv run pytest

  examples:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Set up Python
      run: uv python install

    - name: Run basic example through example's entrypoint
      working-directory: ./examples/basic
      run: uv run example
    - name: Run basic example through watchpost CLI
      working-directory: ./examples/basic
      run: uv run watchpost --app basic:app run-checks

  cmk-docker-build:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/takkt-ag/watchpost/checkmk
    # TODO: enable this once the repository is public
    # - name: Login to GitHub Container Registry
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   uses: docker/login-action@v3
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: "{{defaultContext}}:checkmk-integration"
        file: "Dockerfile.checkmk"
        # TODO: enable this once the repository is public
        # push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        push: false
        tags: ${{ steps.meta.outputs.tags }}

  docs-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Set up Python
      run: uv python install

    - name: Build docs
      run: uv run --all-extras --all-groups mkdocs build --strict
